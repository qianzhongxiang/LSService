// <auto-generated />
using System;
using DONN.LS.DBHelperSingle;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DBHelperSingle.Migrations
{
    [DbContext(typeof(LocationContext))]
    [Migration("20181123002757_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DONN.LS.Entities.DeviceProfile", b =>
                {
                    b.Property<string>("Uid");

                    b.Property<string>("Type");

                    b.Property<int>("Day");

                    b.Property<int>("DevState");

                    b.Property<Guid>("IdLoactionData");

                    b.Property<int>("Interval");

                    b.Property<byte[]>("TS")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Uid", "Type");

                    b.ToTable("DeviceProfile");
                });

            modelBuilder.Entity("DONN.LS.Entities.TempLocations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CollectTime");

                    b.Property<int?>("CustomInterval");

                    b.Property<int?>("Direction");

                    b.Property<decimal>("Duration");

                    b.Property<int>("EPSG");

                    b.Property<int?>("Floor");

                    b.Property<string>("OriginalData");

                    b.Property<int>("Port");

                    b.Property<string>("Region");

                    b.Property<int?>("RelativePosition1");

                    b.Property<int?>("RelativePosition2");

                    b.Property<int?>("RelativePosition3");

                    b.Property<string>("RemoteHostName");

                    b.Property<DateTime?>("SendTime");

                    b.Property<string>("ServiceName");

                    b.Property<double?>("Speed");

                    b.Property<string>("Type");

                    b.Property<string>("UniqueId");

                    b.Property<decimal?>("X");

                    b.Property<decimal?>("Y");

                    b.Property<decimal?>("Z");

                    b.HasKey("Id");

                    b.HasIndex("SendTime");

                    b.ToTable("TempLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
